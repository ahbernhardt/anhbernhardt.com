{"version":3,"sources":["webpack:///./src/components/Elements/PageHeader/style.js","webpack:///./src/components/Elements/Image/index.js","webpack:///./src/components/WorksPage/Content/styles.js","webpack:///./src/components/WorksPage/ProjectItem/style.js","webpack:///./src/components/WorksPage/ProjectItem/index.js","webpack:///./src/components/WorksPage/Content/index.js","webpack:///./src/pages/work.js","webpack:///./src/style/shared.js"],"names":["styled","header","media","mac13","lg","colors","gray400","md","sm","h1","fonts","display","white","Image","state","isLoaded","renderSource","source","i","srcset","key","srcSet","join","setLoaded","this","setState","render","props","src","alt","sources","className","loader","map","onLoad","Component","defaultProps","ContentWrapper","main","ProjectWrapper","nav","EachProject","a","Text","span","Inner","outline","gray200","TitleSub","HoverReveal","div","HoverInner","ProjectImage","ProjectItem","title","company","imageLink","imageTitle","url","href","target","projects","data","revealProject","useRef","useEffect","sr","reveal","current","srConfig","ref","edges","length","project","location","query","Layout","Head","META","work","image","common","li","ListItemLine","Loader","css"],"mappings":"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","file":"component---src-pages-work-js-6a2bcefa81a7b918b1cf.js","sourcesContent":["import styled from 'styled-components'\nimport { colors, fonts, media } from \"../../../style/constants\"\n\nexport const Header = styled.header`\n  display: block;\n  overflow: hidden:\n  top: 0;\n  margin-top: 0;\n  height: 100%;\n  // border: dotted 1px ${colors.yellow700};\n  \n  ${media.mac13`\n    top: 0;\n    left: 0;\n    overflow: hidden:\n    height: 100vh;\n    width: 10vw;\n  `}\n  ${media.lg`\n    margin-top: 6.5rem;\n    margin-bottom: 0;\n    width: 110%;\n    height: 150px;\n    margin-left: -28px;\n    padding-left: 30px;\n    border-bottom: solid 1px ${colors.gray400};\n  `}\n  ${media.md`\n    margin-top: 6.5rem;\n    margin-bottom: 0;\n    width: 114%;\n    height: 150px;\n    margin-left: -28px;\n    padding-left: 30px;\n    border-bottom: solid 1px ${colors.gray400};\n  `}\n  \n  ${media.sm`\n    margin-top: 6.5rem;\n    margin-left: -5rem;\n    margin-bottom: .5rem;\n    width: 100%;\n    height: 100px;\n    padding-bottom: 2rem;\n    border: none;\n  `}\n`\nexport const HeaderTitle = styled.h1`\n  font-family: ${fonts.display};\n  color: ${colors.white};\n  font-style: normal;\n  font-weight: 200 ;\n  letter-spacing: 5px;\n  font-size: 7rem;\n  text-transform: uppercase;\n  white-space: nowrap;\n  transform: rotate(90deg);\n  opacity: 0.3;\n   \n  ${media.mac13`\n    width: 6.5vw;\n    position: fixed;\n  `}\n  ${media.lg`\n    transform: rotate(0deg);\n    font-size: 9vw;\n    font-style: normal;\n    font-display: auto;\n    font-weight: 200 ;\n  `}\n  ${media.md`\n    transform: rotate(0deg);\n    font-size: 9vw;\n    font-style: normal;\n    font-display: auto;\n    font-weight: 200 ;\n  `}\n  \n  ${media.sm`\n    transform: rotate(0deg);\n    font-size: 52px;\n  `}\n  \n &:before,\n &::after {\n    position: absolute;\n    opacity: 0.2;\n }\n \n  &:before {\n    content: attr(data-title) \"—\" ;\n    transform: translateX(-100%);\n    ${media.lg`\n      content: \"\";\n    `}\n     ${media.md`\n      content: \"\";\n    `}\n    \n    ${media.sm`\n      content: \"\";\n    `}\n  }\n  \n  &:after {\n    content: attr(data-title) \"—\" ;\n    ${media.lg`\n      content: \"\";\n    `}\n    ${media.md`\n      content: \"\";\n    `}\n    \n    ${media.sm`\n      content: \"\";\n    `}\n  }\n`\n","import React, { Component } from 'react'\nimport { string, arrayOf, shape, func } from 'prop-types'\n\nclass Image extends Component {\n    state = { isLoaded: false }\n\n    renderSource(source, i) {\n        const { media, srcset } = source\n        return media\n            ? <source key={i} media={`(${media})`} srcSet={srcset.join(', ')} />\n            : <source key={i} srcSet={srcset.join(', ')} />\n    }\n\n    setLoaded() {\n        this.setState({ isLoaded: true })\n    }\n\n    render() {\n        const { src, alt, sources, className, loader } = this.props\n        const { isLoaded } = this.state\n        return (\n            <picture className={className}>\n                {loader && loader({ isLoaded })}\n                {sources && sources.map(this.renderSource)}\n                <img onLoad={() => this.setLoaded()} src={src} alt={alt} />\n            </picture>\n        )\n    }\n}\n\nImage.propTypes = {\n    src: string.isRequired,\n    alt: string,\n    sources: arrayOf(shape({\n        media: string,\n        srcset: arrayOf(string).isRequired\n    })),\n    className: string,\n    loader: func.isRequired\n}\n\nImage.defaultProps = {\n    alt: '',\n    sources: { media: null },\n    className: null\n}\n\nexport default Image\n","import styled from \"styled-components\"\nimport { colors, media } from \"../../../style/constants\"\n\nexport const ContentWrapper = styled.main`\n  display: block;\n  width: 85vw;\n  height: 100vh;\n  counter-reset: counter;\n  // border: dotted 1px ${colors.yellow500};\n  \n  ${media.mac13`\n    width: 100%;\n    height: 100%;\n    margin-top: 3rem;\n    margin-bottom: 4rem;\n    margin-right: 60px;\n    padding-left: 120px;\n  `}\n  ${media.lg`\n    width: 100%;\n  `}\n  ${media.md`\n    width: 100%;\n  `}\n  \n  ${media.sm`\n    width: 90vw;\n    margin-left: -4rem;\n    grid-template-columns: repeat(1, 1.8fr);\n    grid-row: 1;\n    grid-column: 1;\n  `}\n`\n","import styled from 'styled-components'\nimport { colors, fonts } from \"../../../style/constants\"\nimport Image from \"../../Elements/Image\"\n\nexport const ProjectWrapper = styled.nav`\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  z-index: 2;\n  // border: 1px dotted ${colors.yellow500};\n`\nexport const EachProject = styled.a`\n  flex: none;\n  display: flex;\n  justify-content: flex-end;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  pointer-event: visible;\n  \n  &::before{\n    counter-increment: counter;\n    content: counters(counter, \".\", decimal-leading-zero);\n    position: absolute;\n    left: 0;\n    border-left: 3px solid currentColor;\n    top: 20%;\n    height: 60%;\n    padding-left: 1rem;\n    display: flex;\n    align-items: center;\n    line-height: 1;\n    font-weight: bold;\n    opacity: 0;\n    transform: translateX(0);\n    transition: transform 0.3s, opacity 0.3s;\n  }\n  \n  &:hover{\n    &::before{\n      opacity: 1;\n      transform: translateX(0);\n    }\n    \n    .titleSub{\n      opacity: 1;\n      transition-duration: 1s;\n      transform: translateY(250px);\n      \n      &::before{\n        transform: rotate(22.5deg) scale3d(1,1,1);\n      }\n    }\n    \n    .imageReveal{\n      display: block;\n      opacity: 1;\n      z-index: 2;\n    }\n  }\n`\n\nexport const Text = styled.span`\n  position: relative;\n  cursor: pointer;\n  height: 100%;\n  display: block;\n  overflow: hidden;\n  margin: 0;\n  text-align: right;\n`\nexport const Inner = styled.span`\n  display: block;\n  font-family: ${fonts.outline};\n  font-weight: 400;\n  font-size: 5vw;\n  white-space: nowrap;\n  color: ${colors.gray200};\n  // border: 1px dotted ${colors.yellow500};\n`\n\nexport const TitleSub = styled.span`\n  color: ${colors.gray200}\n  display: block;\n  text-transform: uppercase;\n  font-weight: 500;\n  white-space: nowrap;\n  position: relative;\n  padding-left: 1rem;\n  opacity: 0;\n  transform: translateY(50px);\n  transition: transform 1s, opacity 0.3s;\n  line-height: 2.5rem;\n  // border: 1px dotted ${colors.yellow700};\n  \n  &::before{\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 5%;\n    width: 1px;\n    height: 75%;\n    background: currentColor;\n    transform-origin: 0 100%;\n    transform: rotate(22.5deg) scale3d(0,1,1);\n    transition: transform 0.3s;\n`\n\nexport const HoverReveal = styled.div`\n  position: absolute;\n  display: block;\n  overflow: hidden:\n  z-index: -1;\n  width: 360px;\n  height: 200px;\n  top: 0;\n  left: 0;\n  margin-left: 100px;\n  margin-top: -50px;\n  pointer-events: none;\n  display: none;\n  opacity: 1;\n`\nexport const HoverInner = styled.div`\n  border-radius: 6px;\n  position: relative;\n  overflow: hidden;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  width: 100%;\n  height: 100%;\n  // border: 1px solid ${colors.gray400};\n`\n\nexport const ProjectImage = styled(Image)`\n  position: relative;\n  display: block;\n  z-index: 2;\n  background-size: cover;\n  // background-position: 50% 50%;\n  \n  img {\n    width: 100%;\n    height: auto;\n    top: 0;\n    left: 0;\n    opacity: 1;\n    object-fit: cover !important;\n  }\n`\n","import React from 'react'\nimport { ProjectWrapper, EachProject, Text, Inner, TitleSub, HoverInner, ProjectImage, HoverReveal } from \"./style\"\nimport { Loader } from \"../../../style/shared\"\n\nconst ProjectItem = ({ title, company,imageLink,imageTitle, url }) =>\n    <ProjectWrapper className=\"menu\">\n      <EachProject href={url} target='_blank'>\n        <Text>\n          <Inner>\n            <span>{title}</span>\n          </Inner>\n          <TitleSub className=\"titleSub\">\n            {company}\n          </TitleSub>\n        </Text>\n        <HoverReveal className=\"imageReveal\">\n          <HoverInner>\n            <ProjectImage\n                src={imageLink}\n                alt={imageTitle}\n                loader={({ isLoaded }) => <Loader isLoaded={isLoaded} />}\n                sources={\n                  [{ srcset: [\n                      {imageLink}\n                  ]}]\n                }\n            />\n          </HoverInner>\n        </HoverReveal>\n      </EachProject>\n    </ProjectWrapper>\n\nexport default ProjectItem\n","import React, { useEffect, useRef } from \"react\"\nimport { ContentWrapper} from \"./styles\"\nimport { srConfig } from \"@config\"\nimport sr from \"@utils/sr\"\nimport ProjectItem from \"../ProjectItem\"\n// import { HoverInner, HoverReveal, ProjectImage } from \"../ProjectItem/style\"\n// import { Loader } from \"../../../style/shared\"\n\n\n  export default ({ data }) => {\n    const { projects} = data\n    const revealProject = useRef(null)\n    // const revealSocial = useRef(null)\n\n    useEffect(() => {\n      sr.reveal(revealProject.current, srConfig(200))\n    }, [])\n\n    return (\n      <ContentWrapper ref={revealProject}>\n        {projects.edges.length > 0 &&\n        projects.edges.map(({ project }, i) => (\n          <ProjectItem key={i}\n            {...project} />))}\n      </ContentWrapper>\n    )\n  }\n","import React from 'react'\nimport Layout from '../components/Elements/Layout'\nimport { META } from \"../utils/constants\"\nimport Head from \"../components/Elements/Head\"\nimport PageHeader from \"../components/Elements/PageHeader\"\nimport WorkContent from \"../components/WorksPage/Content\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nconst ProjectQuery = graphql`\n  query ProjectsQuery {\n    projects: allMongodbWorksProjects {\n      edges {\n        project: node {\n          year\n          title\n          company\n          imageLink\n          imageTitle\n          url\n        }\n      }\n    }\n  }\n`\n\nexport default ({ location }) =>\n  <StaticQuery\n    query= {ProjectQuery}\n    render= {data =>\n      <Layout location={location}>\n          <Head\n            {...META.work}\n            image={META.common.image}\n          />\n          {/*<PageHeader title='Work'/>*/}\n          <WorkContent data={data} />\n      </Layout>\n    }\n  />\n\n","import styled, { css } from 'styled-components'\nimport { media, colors } from './constants'\n\nexport const ListItem = styled.li`\n  font-size: 1rem;\n  color: ${colors.gray400};\n  padding: .3rem 0;\n  line-height: 1.6em;\n`\n\nexport const ListItemLine = styled.li`\n  font-size: .8rem;\n  color: ${colors.gray400};\n  padding: .1rem 0;\n  line-height: 1.2;\n  \n  ${media.sm`\n    font-size: .8rem;\n  `}\n`\n\nexport const Loader = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background: #1b242f;\n  z-index: 2;\n  ${props => props.isLoaded\n    ? css`\n    transform: scale(1.05);\n    opacity: 0;\n  `\n    : css`\n    transform: scale(1);\n    opacity: 1;\n  `}\n`\n"],"sourceRoot":""}